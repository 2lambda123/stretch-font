{"version":3,"file":"stretch-font.min.js","sources":["stretch-font.js"],"sourcesContent":["/**\n * The function `useStretchFont` dynamically adjusts font size based on the width of the parent element.\n * @param [className=stretch-font] - The name of the class that will be used to identify the elements that will have their\n * font size stretched. By default, it is set to \"stretch-font\".\n * @returns An object with a single method `rebuild`.\n */\nfunction useStretchFont(className = \"stretch-font\") {\n  let Nodes = [];\n  let resizeObserver = null;\n  let mutationObserver = null;\n\n  /**\n   * This function saves the font size of an element and sets it as the font size of its child element.\n   * @param el - The HTML element that needs to have its font size saved and set.\n   * @returns The function does not have a return statement, so it does not return anything.\n   */\n  function saveFontSize(el) {\n    if (!el.dataset.fz) {\n      el.dataset.fz = getFontSize(el).slice(0, -2);\n    }\n  }\n\n  function createShadow(el) {\n    if (el.firstChild.classList?.contains(className + \"__save\")) return;\n    const n = document.createElement(\"i\");\n    n.classList.add(className + \"__save\");\n    n.innerHTML = el.innerText;\n    n.style.fontSize = el.dataset.fz + \"px\";\n    el.insertBefore(n, el.firstChild);\n  }\n\n  /**\n   * The function returns the font size of an element.\n   * @param el - The parameter \"el\" is a reference to a DOM element whose font size we want to retrieve.\n   * @returns The function `getFontSize` is returning the computed font size of the element passed as an argument.\n   */\n  function getFontSize(el) {\n    return self.getComputedStyle(el, null).getPropertyValue(\"font-size\");\n  }\n\n  /**\n   * The function sets the font size of an element based on its width and optional minimum and maximum font sizes.\n   * @param el - The parameter `el` is a reference to an HTML element.\n   */\n  function setFontSize(el) {\n    let { fz, stretchMin: min, stretchMax: max } = el.dataset;\n    min !== undefined && (min = +(min || fz));\n    max !== undefined && (max = +(max || fz));\n\n    const calc = (el.offsetWidth / el.firstChild.offsetWidth) * +fz * 0.97;\n    const width = calc > max ? max : calc < min ? min : calc;\n    el.style.fontSize = width + \"px\";\n  }\n\n  /**\n   * The function rebuild() iterates through Nodes, saves the font size of each element, and observes them using an\n   * observer if available.\n   */\n  function rebuild() {\n    Nodes.forEach((el) => {\n      saveFontSize(el);\n      createShadow(el);\n      resizeObserver && resizeObserver.observe(el);\n      mutationObserver && mutationObserver.observe(el, { childList: true });\n    });\n  }\n\n  function entriesResize(entries) {\n    self.requestAnimationFrame(() => entries.forEach(({ target }) => setFontSize(target)));\n  }\n\n  function entriesMutation(entries) {\n    entries.forEach(({ target }) => {\n      createShadow(target);\n      setFontSize(target);\n    });\n  }\n\n  self.addEventListener(\"DOMContentLoaded\", () => {\n    Nodes = document.querySelectorAll(\".\" + className) || [];\n    resizeObserver = new ResizeObserver(entriesResize);\n    mutationObserver = new MutationObserver(entriesMutation);\n    rebuild();\n  });\n\n  return {\n    rebuild,\n  };\n}\n\nexport default useStretchFont;\n"],"names":["className","arguments","length","undefined","Nodes","resizeObserver","mutationObserver","saveFontSize","el","dataset","fz","self","getComputedStyle","getPropertyValue","getFontSize","slice","createShadow","_el$firstChild$classL","firstChild","classList","contains","n","document","createElement","add","innerHTML","innerText","style","fontSize","insertBefore","setFontSize","_el$dataset","min","stretchMin","max","stretchMax","calc","offsetWidth","width","rebuild","forEach","observe","childList","entriesResize","entries","requestAnimationFrame","_ref","target","entriesMutation","_ref2","addEventListener","querySelectorAll","ResizeObserver","MutationObserver"],"mappings":"+CAMA,WAAoD,IAA5BA,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,eAC9BG,EAAQ,GACRC,EAAiB,KACjBC,EAAmB,KAOvB,SAASC,EAAaC,GACfA,EAAGC,QAAQC,KACdF,EAAGC,QAAQC,GAkBf,SAAqBF,GACnB,OAAOG,KAAKC,iBAAiBJ,EAAI,MAAMK,iBAAiB,YAC1D,CApBoBC,CAAYN,GAAIO,MAAM,GAAI,GAE9C,CAEA,SAASC,EAAaR,GAAI,IAAAS,EACxB,GAA2BA,QAA3BA,EAAIT,EAAGU,WAAWC,iBAAdF,IAAuBA,IAAvBA,EAAyBG,SAASpB,EAAY,UAAlD,CACA,IAAMqB,EAAIC,SAASC,cAAc,KACjCF,EAAEF,UAAUK,IAAIxB,EAAY,UAC5BqB,EAAEI,UAAYjB,EAAGkB,UACjBL,EAAEM,MAAMC,SAAWpB,EAAGC,QAAQC,GAAK,KACnCF,EAAGqB,aAAaR,EAAGb,EAAGU,WALuC,CAM/D,CAeA,SAASY,EAAYtB,GACnB,IAAAuB,EAA+CvB,EAAGC,QAA5CC,EAAEqB,EAAFrB,GAAgBsB,EAAGD,EAAfE,WAA6BC,EAAGH,EAAfI,gBACnBhC,IAAR6B,IAAsBA,IAAQA,GAAOtB,SAC7BP,IAAR+B,IAAsBA,IAAQA,GAAOxB,IAErC,IAAM0B,EAAQ5B,EAAG6B,YAAc7B,EAAGU,WAAWmB,aAAgB3B,EAAK,IAC5D4B,EAAQF,EAAOF,EAAMA,EAAME,EAAOJ,EAAMA,EAAMI,EACpD5B,EAAGmB,MAAMC,SAAWU,EAAQ,IAC9B,CAMA,SAASC,IACPnC,EAAMoC,SAAQ,SAAChC,GACbD,EAAaC,GACbQ,EAAaR,GACbH,GAAkBA,EAAeoC,QAAQjC,GACzCF,GAAoBA,EAAiBmC,QAAQjC,EAAI,CAAEkC,WAAW,GAChE,GACF,CAEA,SAASC,EAAcC,GACrBjC,KAAKkC,uBAAsB,WAAA,OAAMD,EAAQJ,SAAQ,SAAAM,GAAS,OAAOhB,EAAPgB,EAANC,aACtD,CAEA,SAASC,EAAgBJ,GACvBA,EAAQJ,SAAQ,SAAAS,GAAgB,IAAbF,EAAME,EAANF,OACjB/B,EAAa+B,GACbjB,EAAYiB,EACd,GACF,CASA,OAPApC,KAAKuC,iBAAiB,oBAAoB,WACxC9C,EAAQkB,SAAS6B,iBAAiB,IAAMnD,IAAc,GACtDK,EAAiB,IAAI+C,eAAeT,GACpCrC,EAAmB,IAAI+C,iBAAiBL,GACxCT,GACF,IAEO,CACLA,QAAAA,EAEJ"}